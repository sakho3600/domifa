#

Install backend:
  extends: .base_yarn_workspace_install
  variables:
    CONTEXT: backend
  before_script:
    - find packages -maxdepth 1 -type d -not -name backend | tail -n +2 | xargs rm -rf
  artifacts:
    expire_in: 1 day
    paths:
      - node_modules
      - packages/backend/node_modules

Lint backend:
  extends: .quality_stage
  image: node:12-alpine
  dependencies:
    - Install backend
  needs:
    - Install backend
  allow_failure: true
  script:
    - yarn workspace @domifa/backend lint

Build backend:
  extends: .quality_stage
  image: node:12-alpine
  dependencies:
    - Install backend
  needs:
    - Install backend
  script:
    - yarn workspace @domifa/backend build
  artifacts:
    expire_in: 1 day
    paths:
      - packages/backend/dist

Test backend:
  extends: .quality_stage
  stage: "Integration test"
  image: node:12
  services:
    - name: mongo:4.2.3
  script:
    - |
      cat <<EOF > ./packages/backend/.env
      DB_USER=gitlab
      DB_PASS=test
      DB_HOST=localhost
      DB_PORT=27017
      FRONT_URL=http://localhost:4200/
      API_URL=http://localhost:3000/
      SECRET=lol
      MJ_APIKEY_PUBLIC=9b4593a46c936e6f999e1443b5526633
      MJ_APIKEY_PRIVATE=17be9fcd81da8cc6a07478c95036ec46
      ADMIN_EMAIL=domifa@yopmail.com
      EOF
    - cat ./packages/backend/.env
    - apt-get update && apt-get install -y mongodb pdftk psmisc
    - mongo domifa --eval "db.createUser({user:'gitlab', pwd:'test', roles:[{role:'readWrite', db:'domifa'}], passwordDigestor:'server'});"
    - mongorestore --gzip --archive=./dump_test.gzip
    - yarn workspace @domifa/backend test --detectOpenHandles --forceExit
    - yarn workspace @domifa/backend start:prod &
    - yarn workspace @domifa/frontend test --detectOpenHandles --forceExit
    - killall node

Register backend image:
  extends:
    - .base_register_stage
    - .register_stage
  dependencies:
    - Build backend
  needs:
    - Install backend
    - Build backend
  before_script:
    - cp yarn.lock packages/backend/yarn.lock
  variables:
    CONTEXT: packages/backend
    IMAGE_NAME: $CI_REGISTRY_IMAGE/backend

.deploy_backend_stage:
  extends:
    - .base_deploy_nodejs_chart_stage
    - .deploy_stage
  variables:
    # PORT: ${backend_PORT}
    CONTEXT: backend
    K8S_NAMESPACE: $KUBE_NAMESPACE
    VALUES_FILE: ./packages/backend/k8s.values.yml

Deploy backend (dev):
  variables:
    HOST: api-${CI_ENVIRONMENT_SLUG}-${CI_PROJECT_NAME}.${KUBE_INGRESS_BASE_DOMAIN}
  environment:
    name: review/${CI_COMMIT_REF_NAME}-dev
    url: https://api-${CI_ENVIRONMENT_SLUG}-${CI_PROJECT_NAME}.${KUBE_INGRESS_BASE_DOMAIN}
    on_stop: Stop review
  extends:
    - .deploy_backend_stage
    - .dev_stage
